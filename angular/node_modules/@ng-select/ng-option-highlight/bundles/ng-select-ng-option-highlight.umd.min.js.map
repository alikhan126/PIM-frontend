{"version":3,"sources":["ng://@ng-select/ng-option-highlight/lib/ng-option-highlight.directive.ts","ng://@ng-select/ng-option-highlight/lib/ng-option-highlight.module.ts"],"names":["NgOptionHighlightDirective","elementRef","renderer","this","element","nativeElement","prototype","ngOnChanges","_canHighlight","_highlightLabel","ngAfterViewInit","label","innerHTML","term","alternationString","replace","termRegex","RegExp","_setInnerHtml","Object","defineProperty","_isDefined","html","setProperty","value","undefined","Directive","args","selector","ElementRef","Renderer2","Input","NgOptionHighlightModule","NgModule","declarations","exports"],"mappings":"0VACA,IAAAA,EAAA,WAmBI,SAAAA,EACYC,EACAC,GADAC,KAAAF,WAAAA,EACAE,KAAAD,SAAAA,EACRC,KAAKC,QAAUD,KAAKF,WAAWI,cAuCvC,OApCIL,EAAAM,UAAAC,YAAA,WACQJ,KAAKK,eACLL,KAAKM,mBAIbT,EAAAM,UAAAI,gBAAA,WACIP,KAAKQ,MAAQR,KAAKC,QAAQQ,UACtBT,KAAKK,eACLL,KAAKM,mBAILT,EAAAM,UAAAG,gBAAR,eACUE,EAAQR,KAAKQ,MACnB,GAAKR,KAAKU,KAAV,KAKMC,EAAoBX,KAAKU,KAAKE,QAAQ,IAAK,KAC3CC,EAAY,IAAIC,OAAOH,EAAmB,MAChDX,KAAKe,cAAcP,EAAMI,QAAQC,EAAW,6CANxCb,KAAKe,cAAcP,IAS3BQ,OAAAC,eAAYpB,EAAAM,UAAA,gBAAa,KAAzB,WACI,OAAOH,KAAKkB,WAAWlB,KAAKU,OAASV,KAAKkB,WAAWlB,KAAKQ,wCAGtDX,EAAAM,UAAAY,cAAR,SAAsBI,GAClBnB,KAAKD,SAASqB,YAAYpB,KAAKF,WAAWI,cAAe,YAAaiB,IAGlEtB,EAAAM,UAAAe,WAAR,SAAmBG,GACf,OAAOA,IAAUC,WAAuB,OAAVD,uBAlDrCE,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,mEAPVC,EAAAA,kBAGAC,EAAAA,2CAQCC,EAAAA,MAAKJ,KAAA,CAAC,wBA+CX3B,EA7DA,GCDAgC,EAAA,WAGA,SAAAA,KAIsC,2BAJrCC,EAAAA,SAAQN,KAAA,CAAC,CACNO,aAAc,CAAClC,GACfmC,QAAS,CAACnC,OAEwBgC,EAPtC","sourcesContent":["import * as searchHelper from './search-helper';\nimport {\n    AfterViewInit,\n    Directive,\n    ElementRef,\n    Input,\n    OnChanges,\n    Renderer2\n} from '@angular/core';\n\n@Directive({\n    selector: '[ngOptionHighlight]'\n})\nexport class NgOptionHighlightDirective implements OnChanges, AfterViewInit {\n\n    @Input('ngOptionHighlight') term: string;\n\n    private element: HTMLElement;\n    private label: string;\n\n    constructor(\n        private elementRef: ElementRef,\n        private renderer: Renderer2) {\n        this.element = this.elementRef.nativeElement;\n    }\n\n    ngOnChanges() {\n        if (this._canHighlight) {\n            this._highlightLabel();\n        }\n    }\n\n    ngAfterViewInit() {\n        this.label = this.element.innerHTML;\n        if (this._canHighlight) {\n            this._highlightLabel();\n        }\n    }\n\n    private _highlightLabel() {\n        const label = this.label;\n        if (!this.term) {\n            this._setInnerHtml(label);\n            return;\n        }\n\n        const alternationString = this.term.replace(' ', '|')\n        const termRegex = new RegExp(alternationString, 'gi')\n        this._setInnerHtml(label.replace(termRegex, `<span class=\\\"highlighted\\\">$&</span>`))\n    }\n\n    private get _canHighlight() {\n        return this._isDefined(this.term) && this._isDefined(this.label);\n    }\n\n    private _setInnerHtml(html) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'innerHTML', html);\n    }\n\n    private _isDefined(value: any) {\n        return value !== undefined && value !== null;\n    }\n}   \n","import { NgModule } from '@angular/core';\nimport { NgOptionHighlightDirective } from './ng-option-highlight.directive';\n\n@NgModule({\n    declarations: [NgOptionHighlightDirective],\n    exports: [NgOptionHighlightDirective]\n})\nexport class NgOptionHighlightModule {}\n"]}